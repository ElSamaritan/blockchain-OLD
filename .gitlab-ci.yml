# ============================================================================================== #
#                                                                                                #
#                                       Xi Blockchain                                            #
#                                                                                                #
# ---------------------------------------------------------------------------------------------- #
# This file is part of the Galaxia Project - Xi Blockchain                                       #
# ---------------------------------------------------------------------------------------------- #
#                                                                                                #
# Copyright 2018 Galaxia Project Developers                                                      #
#                                                                                                #
# This program is free software: you can redistribute it and/or modify it under the terms of the #
# GNU General Public License as published by the Free Software Foundation, either version 3 of   #
# the License, or (at your option) any later version.                                            #
#                                                                                                #
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;      #
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.      #
# See the GNU General Public License for more details.                                           #
#                                                                                                #
# You should have received a copy of the GNU General Public License along with this program.     #
# If not, see <https://www.gnu.org/licenses/>.                                                   #
#                                                                                                #
# ============================================================================================== #

stages:
  - build
  - test
  - analysis
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive

# ================================================================================================================== #
#                                                                                                                    #
#                                                        BUILD                                                       #
#                                                                                                                    #
# ================================================================================================================== #

.linux_build_template: &linux_build_definition
  stage: build
  tags:
    - docker
  script:
    - mkdir -p .build
    - cd .build
    - rm -f CMakeCache.txt || true
    - cmake -DCMAKE_INSTALL_PREFIX:PATH=../.install -DCMAKE_BUILD_TYPE=Release -DXI_BREAKPAD=ON -DXI_BUILD_TESTSUITE=ON ..
    - make -j 2
    - make install
    - cd ../.install/bin
    - dump_syms ./xi-daemon > ../../.build/src/xi-daemon.sym && strip ./xi-daemon
    - dump_syms ./xi-wallet > ../../.build/src/xi-wallet.sym && strip ./xi-wallet
    - dump_syms ./xi-miner > ../../.build/src/xi-miner.sym && strip ./xi-miner
    - dump_syms ./xi-pgservice > ../../.build/src/xi-pgservice.sym && strip ./xi-pgservice

  cache:
    key: "$CI_COMMIT_REF_SLUG-$CI_JOB_NAME"
    paths: [.build/]
  artifacts:
    paths:
      - .build/
      - .install/
  dependencies: []

Ubuntu Bionic - Build:
  <<: *linux_build_definition
  image: registry.gitlab.com/galaxia-project/blockchain/develop-environments/ubuntu:bionic

Ubuntu Xenial - Build:
  <<: *linux_build_definition
  image: registry.gitlab.com/galaxia-project/blockchain/develop-environments/ubuntu:xenial

openSuse Leap - Build:
  <<: *linux_build_definition
  image: registry.gitlab.com/galaxia-project/blockchain/develop-environments/opensuse:leap

Windows 10 - Build:
  stage: build
  tags:
    - windows
  script:
    - if not exist ".\.build" mkdir .\.build
    - cd .\.build
    - IF EXIST CMakeCache.txt DEL /F CMakeCache.txt
    - cmake -G "Visual Studio 15 2017 Win64" -DCMAKE_INSTALL_PREFIX:PATH=../.install -DCMAKE_BUILD_TYPE=Release -DXI_BREAKPAD=ON -DXI_BUILD_TESTSUITE=ON ..
    - cmake --build . --config Release
    - cmake --build . --target install --config Release
    - cd .\src\Release
    - CALL ..\..\..\external\google-breakpad\src\tools\windows\binaries\dump_syms.exe xi-daemon.pdb > xi-daemon.sym
    - CALL ..\..\..\external\google-breakpad\src\tools\windows\binaries\dump_syms.exe xi-wallet.pdb > xi-wallet.sym
    - CALL ..\..\..\external\google-breakpad\src\tools\windows\binaries\dump_syms.exe xi-miner.pdb > xi-miner.sym
    - CALL ..\..\..\external\google-breakpad\src\tools\windows\binaries\dump_syms.exe xi-pgservice.pdb > xi-pgservice.sym
  cache:
    key: "%CI_COMMIT_REF_SLUG%-%CI_JOB_NAME%"
    paths: [.build/]
  artifacts:
    paths:
      - .build/
      - .install/
  dependencies: []

# ================================================================================================================== #
#                                                                                                                    #
#                                                      TESTS                                                         #
#                                                                                                                    #
# ================================================================================================================== #


.linux_test_template: &linux_test_definition
  stage: test
  tags:
    - docker
  script:
    - cd ./.build
    - ctest -VV

Ubuntu Bionic - Test:
  <<: *linux_test_definition
  image: registry.gitlab.com/galaxia-project/blockchain/develop-environments/ubuntu:bionic
  dependencies: ["Ubuntu Bionic - Build"]

Ubuntu Xenial - Test:
  <<: *linux_test_definition
  image: registry.gitlab.com/galaxia-project/blockchain/develop-environments/ubuntu:xenial
  dependencies: ["Ubuntu Xenial - Build"]

openSuse Leap - Test:
  <<: *linux_test_definition
  image: registry.gitlab.com/galaxia-project/blockchain/develop-environments/opensuse:leap
  dependencies: ["openSuse Leap - Build"]

Windows 10 - Test:
  stage: test
  tags:
    - windows
  dependencies: ["Windows 10 - Build"]
  script:
    - cd .\.build
    - ctest -VV -C Release

# ================================================================================================================== #
#                                                                                                                    #
#                                                           ANALYSIS                                                 #
#                                                                                                                    #
# ================================================================================================================== #

CppCheck:
  stage: analysis
  image: registry.gitlab.com/galaxia-project/blockchain/develop-environments/cppcheck:latest
  tags:
    - docker
  script: "/bin/bash ./scripts/ci/CppCheck.sh"
  dependencies: []
  artifacts:
    paths: 
      - cppcheck.xml
      - .site/
  only:
    - develop
    - master

CppLint:
  stage: analysis
  image: registry.gitlab.com/galaxia-project/blockchain/develop-environments/cpplint:latest
  tags:
    - docker
  dependencies: []
  script: "/bin/bash ./scripts/ci/CppLint.sh"
  artifacts:
    paths: 
      - cpplint.xml
      - .site/
  only:
    - develop
    - master

# ================================================================================================================== #
#                                                                                                                    #
#                                                       DEPLOY                                                       #
#                                                                                                                    #
# ================================================================================================================== #

.linux_deploy_template: &linux_deploy_definition
  stage: deploy
  tags:
    - docker
  variables:
    BREAKPAD_HOST: "207.180.240.156:80"
  script:
    - mv ./.install ./Xi
    - cd ./.build/src
    # - /bin/bash ../../scripts/ci/UploadSym.sh xi-daemon.sym
    # - /bin/bash ../../scripts/ci/UploadSym.sh xi-wallet.sym
    # - /bin/bash ../../scripts/ci/UploadSym.sh xi-miner.sym
    # - /bin/bash ../../scripts/ci/UploadSym.sh xi-pgservice.sym
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - Xi/

Ubuntu Bionic:
  <<: *linux_deploy_definition
  image: registry.gitlab.com/galaxia-project/blockchain/develop-environments/ubuntu:bionic
  dependencies: ["Ubuntu Bionic - Build"]

Ubuntu Xenial:
  <<: *linux_deploy_definition
  image: registry.gitlab.com/galaxia-project/blockchain/develop-environments/ubuntu:xenial
  dependencies: ["Ubuntu Xenial - Build"]

openSuse Leap:
  <<: *linux_deploy_definition
  image: registry.gitlab.com/galaxia-project/blockchain/develop-environments/opensuse:leap
  dependencies: ["openSuse Leap - Build"]

Windows 10:
  stage: deploy
  tags:
    - windows
  variables:
    BREAKPAD_HOST: "207.180.240.156:80"
  dependencies: ["Windows 10 - Build"]
  script:
    - MOVE .install Xi
    # - PowerShell -File .\scripts\ci\UploadSym.ps1 .\.build\src\Release\xi-daemon.sym
    # - PowerShell -File .\scripts\ci\UploadSym.ps1 .\.build\src\Release\xi-wallet.sym
    # - PowerShell -File .\scripts\ci\UploadSym.ps1 .\.build\src\Release\xi-miner.sym
    # - PowerShell -File .\scripts\ci\UploadSym.ps1 .\.build\src\Release\xi-pgservice.sym
  artifacts:
    name: "%CI_JOB_NAME%-%CI_COMMIT_REF_NAME%"
    paths:
      - Xi/

Docker:
  image: docker:stable
  stage: deploy
  tags:
    - dind
  dependencies: ["Ubuntu Bionic - Build"]
  before_script: ["docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com"]
  script: "/bin/sh ./scripts/ci/DeployDocker.sh"
  only:
    - develop
    - master
