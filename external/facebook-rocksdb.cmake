if(MSVC)
  set(
    ROCKSB_EXTRA_CMAKE_ARGS
      -DROCKSDB_INSTALL_ON_WINDOWS=ON
      -DCMAKE_C_FLAGS="/MP"
      -DCMAKE_CXX_FLAGS="/MP"
      -DCMAKE_SHARED_LINKER_FLAGS="/ignore:4221"
      -DCMAKE_STATIC_LINKER_FLAGS="/ignore:4221"
  )
else()
  set(ROCKSDB_EXTRA_CMAKE_ARGS -DENABLE_PTHREAD_MUTEX_ADAPTIVE_NP=OFF)
endif()

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
  set(ROCKSDB_BUILD_TYPE "Debug")
else()
  set(ROCKSDB_BUILD_TYPE "Release")
endif()

ExternalProject_Add(
  facebook-rocksdb

  PREFIX "facebook-rocksdb"

  UPDATE_COMMAND ""
  PATCH_COMMAND ""
  TEST_COMMAND ""

  SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/facebook-rocksdb"
  INSTALL_DIR ${CMAKE_CURRENT_BINARY_DIR}/rocksdb

  CMAKE_ARGS
    -DWITH_MD_LIBRARY=OFF
    -DWITH_TESTS=OFF
    -DWITH_TOOLS=OFF
    -DPORTABLE=ON
    -DWITH_RUNTIME_DEBUG=ON
    -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_CURRENT_BINARY_DIR}/rocksdb
    -DCMAKE_BUILD_TYPE=${ROCKSDB_BUILD_TYPE}
    -DUSE_RTTI=ON
    ${ROCKSB_EXTRA_CMAKE_ARGS}

  INSTALL_COMMAND cmake -DCOMPONENT=devel -P cmake_install.cmake
)
install()
ExternalProject_Get_Property(facebook-rocksdb INSTALL_DIR)

add_library(rocksdb STATIC IMPORTED GLOBAL)
add_dependencies(rocksdb facebook-rocksdb)

include(GNUInstallDirs)
if(MSVC)
  set_property(TARGET rocksdb PROPERTY IMPORTED_LOCATION ${INSTALL_DIR}/${CMAKE_INSTALL_LIBDIR}/rocksdb${CMAKE_STATIC_LIBRARY_SUFFIX})
  set_property(TARGET rocksdb PROPERTY INTERFACE_LINK_LIBRARIES Shlwapi.lib)
else()
  set_property(TARGET rocksdb PROPERTY IMPORTED_LOCATION ${INSTALL_DIR}/${CMAKE_INSTALL_LIBDIR}/librocksdb${CMAKE_STATIC_LIBRARY_SUFFIX})
endif()
set_property(TARGET rocksdb APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${INSTALL_DIR}/include")
